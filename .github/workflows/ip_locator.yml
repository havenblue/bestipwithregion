name: IP Address Location Checker

on:
  # 定时触发，每天运行一次
  schedule:
    - cron: '0 0 * * *'
  # 允许手动触发
  workflow_dispatch:
  # 可以添加其他触发条件，如push到特定分支
  # push:
  #   branches: [ main ]

jobs:
  check-ip-locations:
    runs-on: ubuntu-latest
    steps:
      # 检出代码仓库
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      # 设置Python环境
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'
          cache: 'pip'

      # 安装依赖
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install requests

      # 运行IP地址查询脚本（内嵌Python代码）
      - name: Run IP locator script
        run: |
          python - << 'EOF'
          import requests
          import re
          import os
          
          # 从URL获取IP列表
          def get_ips_from_url(url):
              try:
                  response = requests.get(url, timeout=10)
                  response.raise_for_status()
                  return response.text.strip().split('\n')
              except Exception as e:
                  print(f"获取IP列表失败: {e}")
                  return []
          
          # 验证IP地址格式
          def is_valid_ip(ip):
              pattern = r'^((25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.){3}(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$'
              return re.match(pattern, ip) is not None
          
          # 查询IP归属地
          def get_ip_location(ip):
              try:
                  # 使用ip-api.com服务查询IP归属地
                  response = requests.get(f"http://ip-api.com/json/{ip}?fields=countryCode", timeout=5)
                  response.raise_for_status()
                  data = response.json()
                  # 返回国家代码，如果查询失败返回'Unknown'
                  return data.get('countryCode', 'Unknown') if data.get('status') == 'success' else 'Unknown'
              except Exception as e:
                  print(f"查询IP {ip} 归属地失败: {e}")
                  return 'Unknown'
          
          # 主函数
          def main():
              # 从环境变量或默认值获取URL
              url = os.environ.get('IP_LIST_URL', 'https://raw.githubusercontent.com/tianshipapa/cfipcaiji/refs/heads/main/ip.txt')
              
              # 获取IP列表
              ips = get_ips_from_url(url)
              if not ips:
                  print("没有获取到IP地址")
                  return
              
              # 创建结果列表
              results = []
              for ip in ips:
                  ip = ip.strip()
                  if is_valid_ip(ip):
                      country_code = get_ip_location(ip)
                      results.append(f"{ip}#{country_code}")
                      print(f"处理IP: {ip} -> {country_code}")
                  elif ip:  # 跳过空行但记录无效IP
                      print(f"无效的IP地址: {ip}")
              
              # 写入结果到ip.txt文件
              with open('ip.txt', 'w', encoding='utf-8') as f:
                  f.write('\n'.join(results))
              
              print(f"共处理 {len(results)} 个有效IP地址，结果已保存到ip.txt")
          
          if __name__ == "__main__":
              main()
          EOF

      # 可选：将结果提交回仓库
      - name: Commit and push results
        run: |
          git config --global user.name 'github-actions[bot]'
          git config --global user.email 'github-actions[bot]@users.noreply.github.com'
          git add ip.txt
          # 检查是否有更改
          if git diff --staged --quiet; then
            echo "No changes to commit"
          else
            git commit -m "Update IP location data"
            git push
          fi
        # 仅在需要自动提交结果时启用此步骤
        # 注意：需要确保GitHub Actions有权限推送代码
        # 可以通过在仓库设置中配置适当的权限来实现
